user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {

    server {
        listen 80;
        server_name localhost;

        # Serve React frontend
        root /usr/share/nginx/html;
        index index.html;

        # Serve static files and fallback to index.html for SPA routes
        location / {
            try_files $uri $uri/ /index.html;
        }

            # ðŸ”¹ Force correct MIME type for JavaScript files
        location ~* \.m?js$ {
            types { 
                application/javascript js mjs;
            }
            default_type application/javascript;
            add_header Content-Type application/javascript always;
        }

        location ~* \.css$ {
            types {
                text/css css; 
            }
            default_type text/css;
            add_header Content-Type text/css always;
        }


        # Proxy API requests
        location /api/ {
            proxy_pass http://backend:5000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # WebSocket Proxy
	    location /socket.io/ {
    	    proxy_pass http://backend:5000;
    	    proxy_http_version 1.1;
    	    proxy_set_header Upgrade $http_upgrade;
    	    proxy_set_header Connection "Upgrade";
    	    proxy_set_header Host $host;
    	    proxy_set_header X-Real-IP $remote_addr;
    	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    	    proxy_set_header X-Forwarded-Proto $scheme;
	}


        # Serve static files with cache control
        location ~* \.(js|css|png|jpg|jpeg|gif|svg|woff|woff2|ttf|eot|ico|ttf)$ {
            expires 6M;
            access_log off;
        }



        # Handle 404 error
        error_page 404 /404.html;
    }
}
